name: Ultimate OpenWrt WR3000 Build

# Trigger
on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    - cron: "0 2 * * *"  # daily build at 02:00 UTC

env:
  OPENWRT_REPO: https://github.com/openwrt/openwrt.git
  OPENWRT_BRANCH: openwrt-24.10
  CONFIG_FILE: wr3000.config
  CCACHE_DIR: ${{ github.workspace }}/.ccache
  DL_DIR: ${{ github.workspace }}/dl
  FEEDS_DIR: ${{ github.workspace }}/feeds

jobs:
  build:
    runs-on: self-hosted
    timeout-minutes: 480
    strategy:
      matrix:
        device: [cudy_wr3000-v1]  # Expandable for multiple devices
    env:
      DEVICE: ${{ matrix.device }}

    steps:
      # 0️⃣ Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      # 1️⃣ Install dependencies
      - name: Install Build Dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            build-essential libncurses-dev libssl-dev \
            python3-setuptools zlib1g-dev libtool-bin \
            autoconf automake pkg-config git curl wget \
            ccache rsync gawk unzip time quilt diffstat ed gettext

      # 2️⃣ Setup ccache
      - name: Setup ccache
        run: |
          mkdir -p $CCACHE_DIR
          export CCACHE_DIR=$CCACHE_DIR
          export PATH="/usr/lib/ccache:$PATH"
          ccache -M 20G      # max cache size
          ccache -z          # zero stats

      # 3️⃣ Clean previous build
      - name: Clean Old Builds
        run: |
          rm -rf openwrt
          mkdir -p $DL_DIR
          mkdir -p $FEEDS_DIR

      # 4️⃣ Clone OpenWrt
      - name: Clone OpenWrt
        run: |
          git clone --depth 1 -b $OPENWRT_BRANCH $OPENWRT_REPO openwrt

      # 5️⃣ Setup feeds
      - name: Update and Install Feeds
        run: |
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      # 6️⃣ Apply custom device config
      - name: Copy Custom Config
        run: |
          cp $CONFIG_FILE openwrt/.config
          cd openwrt
          make defconfig

      # 7️⃣ Pre-download sources
      - name: Pre-download Sources
        run: |
          cd openwrt
          make download -j$(nproc) V=s || make download -j1 V=s

      # 8️⃣ Build firmware
      - name: Build Firmware
        run: |
          cd openwrt
          export CCACHE_DIR=$CCACHE_DIR
          export PATH="/usr/lib/ccache:$PATH"
          # Parallel build with fallback
          make -j$(nproc) V=s || make -j1 V=s

      # 9️⃣ Show ccache stats
      - name: Show ccache stats
        run: ccache -s

      # 🔟 Strip binaries for minimal size
      - name: Strip Binaries
        run: |
          cd openwrt
          find bin/ -type f -name "*sysupgrade*.bin" -exec strip --strip-unneeded {} \; || true

      # 1️⃣1️⃣ Upload artifacts
      - name: Upload Firmware Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-firmware-${{ matrix.device }}
          path: openwrt/bin/targets/*/*

      # 1️⃣2️⃣ Create GitHub release
      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd openwrt
          DATE=$(date +%F)
          RELEASE_NAME="${DEVICE}-${DATE}"
          gh release delete "$RELEASE_NAME" --cleanup-tag -y 2>/dev/null || true
          gh release create "$RELEASE_NAME" \
            --title "OpenWrt $DEVICE Build ($DATE)" \
            --notes "Self-hosted build | Config: $CONFIG_FILE | Optimized for size, security, and performance" \
            bin/targets/*/*

      # 1️⃣3️⃣ Summary
      - name: Build Summary
        run: |
          IMAGE_SIZE=$(du -h openwrt/bin/targets/*/*sysupgrade*.bin | cut -f1)
          echo "### Build Summary for $DEVICE" >> $GITHUB_STEP_SUMMARY
          echo "- Image size: $IMAGE_SIZE" >> $GITHUB_STEP_SUMMARY
          echo "- CCACHE Stats:" >> $GITHUB_STEP_SUMMARY
          ccache -s >> $GITHUB_STEP_SUMMARY
          echo "- OpenWrt Branch: $OPENWRT_BRANCH" >> $GITHUB_STEP_SUMMARY
          echo "- Config File: $CONFIG_FILE" >> $GITHUB_STEP_SUMMARY
