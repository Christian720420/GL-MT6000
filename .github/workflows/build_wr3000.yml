name: Advanced OpenWrt WR3000 Build

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    - cron: "0 3 * * *" # daily 03:00 UTC

env:
  OPENWRT_REPO: https://github.com/openwrt/openwrt.git
  OPENWRT_BRANCH: openwrt-24.10
  CCACHE_DIR: ${{ github.workspace }}/.ccache
  DL_DIR: ${{ github.workspace }}/dl
  FEEDS_DIR: ${{ github.workspace }}/feeds

jobs:
  build:
    runs-on: self-hosted
    timeout-minutes: 600
    strategy:
      matrix:
        device: [cudy_wr3000-v1, cudy_wr3000-v2]
    env:
      DEVICE: ${{ matrix.device }}
      CONFIG_FILE: "wr3000.config"

    steps:

      # 0Ô∏è‚É£ Checkout repo
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 1Ô∏è‚É£ Install dependencies
      - name: Install Build Dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential libncurses-dev libssl-dev \
            python3-setuptools zlib1g-dev libtool-bin autoconf automake \
            pkg-config git curl wget ccache rsync gawk unzip time \
            quilt diffstat ed gettext

      # 2Ô∏è‚É£ Setup ccache
      - name: Setup ccache
        run: |
          mkdir -p $CCACHE_DIR
          export CCACHE_DIR=$CCACHE_DIR
          export PATH="/usr/lib/ccache:$PATH"
          ccache -M 20G
          ccache -z

      # 3Ô∏è‚É£ Clean old build
      - name: Clean Old Build
        run: |
          rm -rf openwrt
          mkdir -p $DL_DIR
          mkdir -p $FEEDS_DIR

      # 4Ô∏è‚É£ Clone OpenWrt
      - name: Clone OpenWrt
        run: |
          git clone --depth 1 -b $OPENWRT_BRANCH $OPENWRT_REPO openwrt

      # 5Ô∏è‚É£ Update & install feeds (retry on failure)
      - name: Update & Install Feeds
        run: |
          cd openwrt
          git config --global http.postBuffer 524288000
          for i in {1..5}; do
              ./scripts/feeds update -a && break || echo "Retry $i failed, waiting..." && sleep 10
          done
          ./scripts/feeds install -a

      # 6Ô∏è‚É£ Apply custom configuration
      - name: Copy Custom Config
        run: |
          cp $CONFIG_FILE openwrt/.config
          cd openwrt
          make defconfig

      # 7Ô∏è‚É£ Pre-download sources
      - name: Pre-download Sources
        run: |
          cd openwrt
          make download -j$(nproc) V=s || make download -j1 V=s

      # 8Ô∏è‚É£ Build firmware
      - name: Build Firmware
        run: |
          cd openwrt
          export CCACHE_DIR=$CCACHE_DIR
          export PATH="/usr/lib/ccache:$PATH"
          make -j$(nproc) V=s || make -j1 V=s

      # 9Ô∏è‚É£ Strip binaries
      - name: Strip Binaries
        run: |
          cd openwrt
          find bin/ -type f -name "*sysupgrade*.bin" -exec strip --strip-unneeded {} \; || true

      # üîü Generate SHA256 checksums
      - name: Generate Checksums
        run: |
          cd openwrt/bin/targets/*
          sha256sum *sysupgrade*.bin > SHA256SUMS.txt

      # 1Ô∏è‚É£1Ô∏è‚É£ Upload artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: openwrt-${{ matrix.device }}
          path: openwrt/bin/targets/*

      # 1Ô∏è‚É£2Ô∏è‚É£ Create GitHub release
      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd openwrt
          DATE=$(date +%F)
          RELEASE_NAME="${DEVICE}-${DATE}"
          gh release delete "$RELEASE_NAME" --cleanup-tag -y 2>/dev/null || true
          gh release create "$RELEASE_NAME" \
            --title "OpenWrt $DEVICE Build ($DATE)" \
            --notes "Self-hosted build | Config: $CONFIG_FILE | Optimized for size, security, and performance" \
            bin/targets/*

      # 1Ô∏è‚É£3Ô∏è‚É£ Build summary & ccache stats
      - name: Build Summary
        run: |
          IMAGE_SIZE=$(du -h openwrt/bin/targets/*/*sysupgrade*.bin | cut -f1)
          echo "### Build Summary for $DEVICE" >> $GITHUB_STEP_SUMMARY
          echo "- Image size: $IMAGE_SIZE" >> $GITHUB_STEP_SUMMARY
          echo "- CCACHE Stats:" >> $GITHUB_STEP_SUMMARY
          ccache -s >> $GITHUB_STEP_SUMMARY
          echo "- OpenWrt Branch: $OPENWRT_BRANCH" >> $GITHUB_STEP_SUMMARY
          echo "- Config File: $CONFIG_FILE" >> $GITHUB_STEP_SUMMARY

      # 1Ô∏è‚É£4Ô∏è‚É£ Optional: Telegram/Slack notification
      #- name: Send Telegram Notification
      #  uses: appleboy/telegram-action@v0.2.0
      #  with:
      #    to: ${{ secrets.TELEGRAM_CHAT_ID }}
      #    token: ${{ secrets.TELEGRAM_TOKEN }}
      #    message: "OpenWrt $DEVICE build completed. Check artifacts and release!"
