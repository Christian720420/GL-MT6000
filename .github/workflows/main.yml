name: Build OpenWrt 24.10.3 for Cudy WR3000

on:
  workflow_dispatch:
    inputs:
      openwrt_revision:
        description: 'OpenWrt Revision (e.g., r28872-daca7c049b)'
        required: true
        default: 'r28872-daca7c049b'
        type: string
      luci_commit:
        description: 'LuCI Commit (e.g., 923f8d9)'
        required: true
        default: '923f8d9'
        type: string
      custom_config:
        description: 'Custom Config Snippet (optional, e.g., "CONFIG_PACKAGE_wireguard-tools=y")'
        required: false
        default: ''
        type: string

env:
  REPO_URL: https://git.openwrt.org/openwrt/openwrt.git
  LUCI_URL: https://github.com/openwrt/luci.git
  BUILD_ROOT: ${{ github.workspace }}/openwrt
  TZ: UTC  # Adjust to your timezone, e.g., 'America/New_York'

jobs:
  build:
    name: Build Firmware
    runs-on: self-hosted  # Use your self-hosted runner label if customized
    container: ubuntu:22.04  # Optional: Ensure runner supports containers

    steps:
      - name: Initialize Environment
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang flex bison g++ gawk gcc-multilib gettext git libncurses5-dev libssl-dev python3 python3-distutils rsync unzip wget zlib1g-dev file libelf-dev ecj javacc ninja-build ccache xsltproc libxml-parser-perl mercurial
          sudo apt-get clean
          sudo timedatectl set-timezone "${TZ}"

      - name: Maximize Build Space
        run: |
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/share/boost /usr/local/lib/android
          df -h

      - name: Checkout OpenWrt Source
        run: |
          git clone --depth=1 ${REPO_URL} ${BUILD_ROOT}
          cd ${BUILD_ROOT}
          git checkout ${{ github.event.inputs.openwrt_revision || 'r28872-daca7c049b' }}
          git log -1 --oneline

      - name: Update and Install Feeds
        run: |
          cd ${BUILD_ROOT}
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Configure LuCI Feed
        run: |
          cd ${BUILD_ROOT}
          sed -i 's|src-git luci https://github.com/openwrt/luci.git$|src-git luci ${LUCI_URL};${{ github.event.inputs.luci_commit || '923f8d9' }}|' feeds.conf.default
          ./scripts/feeds update luci
          ./scripts/feeds install -a -p luci

      - name: Configure Build for Cudy WR3000
        run: |
          cd ${BUILD_ROOT}
          cat > .config << EOF
CONFIG_TARGET_mediatek=y
CONFIG_TARGET_mediatek_filogic=y
CONFIG_TARGET_mediatek_filogic_DEVICE_cudy_wr3000-v1=y
CONFIG_PACKAGE_luci=y
CONFIG_VERSION_NUMBER="24.10.3"
CONFIG_VERSION_CODE="r28872-daca7c049b"
EOF
          # Append custom config if provided
          if [ -n "${{ github.event.inputs.custom_config }}" ]; then
            echo "${{ github.event.inputs.custom_config }}" >> .config
          fi
          make defconfig

      - name: Download Build Dependencies
        run: |
          cd ${BUILD_ROOT}
          make download -j$(nproc) || make download -j1

      - name: Compile Firmware
        run: |
          cd ${BUILD_ROOT}
          make -j$(nproc) V=s
          # Optional: Enable ccache (uncomment and set path if pre-configured)
          # export CCACHE_DIR=/path/to/ccache; ccache -M 10G

      - name: Organize Artifacts
        id: organize
        run: |
          cd ${BUILD_ROOT}/bin/targets/mediatek/filogic/
          rm -rf packages/
          (echo '### SHA256SUMS'; echo '```txt'; sha256sum *; echo '```') > SHA256SUMS
          echo "FIRMWARE=$(pwd)" >> $GITHUB_ENV
          echo "status=success" >> $GITHUB_OUTPUT
        if: always()

      - name: Upload Firmware Artifacts
        uses: actions/upload-artifact@v4
        if: steps.organize.outputs.status == 'success'
        with:
          name: openwrt-cudy-wr3000-24.10.3-${{ github.event.inputs.openwrt_revision || 'r28872-daca7c049b' }}
          path: ${{ env.FIRMWARE }}/*
          retention-days: 30
