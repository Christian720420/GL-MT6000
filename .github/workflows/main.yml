name: Build OpenWrt Cudy-Wr3000 (Small Image)

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  schedule:
    - cron: "38 1 * * *"   # daily 01:38 UTC

env:
  OPENWRT_REPO: https://github.com/openwrt/openwrt.git
  OPENWRT_BRANCH: openwrt-24.10
  CONFIG_FILE: wr3000.config
  CCACHE_DIR: ${{ github.workspace }}/.ccache
  CCACHE_COMPRESS: "1"
  CCACHE_COMPILERCHECK: content

jobs:
  build:
    runs-on: self-hosted
    steps:

      # -------------------------------------------------
      # 0. Clean only diagnostic logs (safe)
      # -------------------------------------------------
      - name: Clean runner diagnostics
        run: |
          DIAG_ROOT="/home/runner/actions-runner/_diag"
          echo "Cleaning $DIAG_ROOT ..."
          rm -rf "$DIAG_ROOT/pages"/* 2>/dev/null || true
          find "$DIAG_ROOT" -type f -name "*.log" -delete 2>/dev/null || true

      # -------------------------------------------------
      # 1. Checkout config repo (updated to cjom/GL-MT6000)
      # -------------------------------------------------
      - name: Checkout GL-MT6000 config
        uses: actions/checkout@v4
        with:
          repository: cjom/GL-MT6000
          path: source_repo
          token: ${{ github.token }}
          persist-credentials: true

      # -------------------------------------------------
      # 2. Install build dependencies (non-interactive)
      # -------------------------------------------------
      - name: Install dependencies
        run: |
          sudo -n apt update -qq
          sudo DEBIAN_FRONTEND=noninteractive apt install -y \
            build-essential libncurses5-dev libssl-dev \
            python3-setuptools zlib1g-dev libtool-bin \
            autoconf automake pkg-config git curl wget \
            ccache rsync gawk unzip time quilt

      # -------------------------------------------------
      # 3. ccache cache (deterministic)
      # -------------------------------------------------
      - name: Cache ccache
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: >-
            ccache-${{ runner.os }}-${{ runner.arch }}-
            ${{ hashFiles('source_repo/${{ env.CONFIG_FILE }}') }}-
            ${{ hashFiles('source_repo/feeds.conf*') || 'nofeeds' }}
          restore-keys: |
            ccache-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('source_repo/${{ env.CONFIG_FILE }}') }}-
            ccache-${{ runner.os }}-${{ runner.arch }}-
            ccache-

      - name: ccache stats (pre-build)
        run: ccache -s

      # -------------------------------------------------
      # 4. Clone OpenWrt + feeds
      # -------------------------------------------------
      - name: Clone OpenWrt & update feeds
        run: |
          rm -rf openwrt
          git clone --depth 1 -b ${{ env.OPENWRT_BRANCH }} ${{ env.OPENWRT_REPO }} openwrt
          cd openwrt

          # copy custom feeds file
          cp ../source_repo/feeds.conf.default ./feeds.conf.default

          ./scripts/feeds update -a
          ./scripts/feeds install -a

      # -------------------------------------------------
      # 5. Apply minimal-size .config
      # -------------------------------------------------
      - name: Prepare .config (small image)
        run: |
          cd openwrt
          cp ../source_repo/${{ env.CONFIG_FILE }} .config

          # ---- SIZE-OPTIMISATION TWEAKS ----
          cat <<'EOF' >> .config

          # Target
          CONFIG_TARGET_ramips=y
          CONFIG_TARGET_ramips_mt7986=y
          CONFIG_TARGET_ramips_mt7986_DEVICE_gl-mt6000=y

          # Filesystem
          CONFIG_SQUASHFS_XZ=y
          CONFIG_SQUASHFS_BLOCK_SIZE=256
          CONFIG_SQUASHFS_ZSTD=n

          # Kernel
          CONFIG_KERNEL_LZ4_COMPRESS=y
          CONFIG_KERNEL_STRIP_DEBUG=y

          # Packages â€“ keep only essentials
          CONFIG_PACKAGE_kmod-mt7915e=y
          CONFIG_PACKAGE_kmod-mt7986-firmware=y
          CONFIG_PACKAGE_luci=y
          CONFIG_PACKAGE_luci-base=y
          CONFIG_PACKAGE_luci-mod-admin=n
          CONFIG_PACKAGE_luci-ssl=n
          CONFIG_PACKAGE_luci-app-firewall=y
          CONFIG_PACKAGE_luci-app-opkg=y
