name: Build OpenWrt for GL-MT6000 (Self-Hosted Runner)

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  schedule:
    - cron: "38 1 * * *"   # daily at 01:38 UTC

env:
  OPENWRT_REPO: https://github.com/openwrt/openwrt.git
  OPENWRT_BRANCH: openwrt-24.10
  CONFIG_FILE: mt6000.config
  CCACHE_DIR: ${{ github.workspace }}/.ccache
  CCACHE_COMPRESS: "1"
  CCACHE_COMPILERCHECK: content

jobs:
  build:
    # Targets ANY self-hosted runner
    # Add label to restrict: runs-on: [self-hosted, debian]
    runs-on: self-hosted
    steps:

      # -------------------------------------------------
      # 0. CLEAN DIAGNOSTICS & WORKSPACE (Fixes "file already exists")
      # -------------------------------------------------
      - name: Clean runner diagnostics and workspace
        run: |
          RUNNER_TEMP="${{ runner.temp }}"
          DIAG_PAGES="$RUNNER_TEMP/_diag/pages"
          echo "Cleaning diagnostic pages: $DIAG_PAGES"
          [ -d "$DIAG_PAGES" ] && rm -rf "$DIAG_PAGES"/* || true

          DIAG_ROOT="${RUNNER_TEMP%/*}/_diag"
          [ -d "$DIAG_ROOT" ] && find "$DIAG_ROOT" -type f -name "*.log" -delete || true

          echo "Cleaning workspace: ${{ github.workspace }}"
          rm -rf "${{ github.workspace }}"/* || true

      # -------------------------------------------------
      # 1. Checkout config repository
      # -------------------------------------------------
      - name: Checkout GL-MT6000 config
        uses: actions/checkout@v4
        with:
          repository: Christian720420/GL-MT6000
          path: source_repo

      # -------------------------------------------------
      # 2. Install system dependencies
      # -------------------------------------------------
      - name: Install dependencies
        run: |
          echo "2323" | sudo -S apt update -qq
          sudo DEBIAN_FRONTEND=noninteractive apt install -y \
            build-essential libncurses5-dev libssl-dev \
            python3-setuptools zlib1g-dev libtool-bin \
            autoconf automake pkg-config git curl wget \
            ccache rsync gawk unzip time

      # -------------------------------------------------
      # 3. Cache ccache (deterministic + fallbacks)
      # -------------------------------------------------
      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ${{ env.CCACHE_DIR }}
          key: self-ccache-${{ runner.os }}-${{ hashFiles('source_repo/${{ env.CONFIG_FILE }}') }}-${{ hashFiles('source_repo/feeds.conf*') || 'nofeeds' }}
          restore-keys: |
            self-ccache-${{ runner.os }}-${{ hashFiles('source_repo/${{ env.CONFIG_FILE }}') }}-
            self-ccache-${{ runner.os }}-
            self-ccache-

      - name: ccache stats
        run: ccache -s

      # -------------------------------------------------
      # 4. Clone OpenWrt (always fresh)
      # -------------------------------------------------
      - name: Clone OpenWrt
        run: |
          rm -rf openwrt
          git clone --depth 1 -b ${{ env.OPENWRT_BRANCH }} ${{ env.OPENWRT_REPO }} openwrt
          cd openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      # -------------------------------------------------
      # 5. Prepare build config
      # -------------------------------------------------
      - name: Prepare build
        run: |
          cd openwrt
          cp ../source_repo/${{ env.CONFIG_FILE }} .config
          [ -d ../source_repo/files ] && cp -r ../source_repo/files ./files || true
          make defconfig

      # ------------------------------------------------
